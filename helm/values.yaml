replicaCount: 4

image:
  repository: registry.bank.internal/credit-scoring-engine
  tag: "3.1.0"
  digest: "sha256:7d865e959b2466918c9863afca942d0fb89d7c9ac0c99bafc3749504ded97730"
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8080"
  prometheus.io/path: "/actuator/prometheus"

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1001
  runAsGroup: 1001
  fsGroup: 1001
  seccompProfile:
    type: RuntimeDefault

securityContext:
  runAsNonRoot: true
  runAsUser: 1001
  runAsGroup: 1001
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  seccompProfile:
    type: RuntimeDefault
  capabilities:
    drop: ["ALL"]

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: credit-scoring.internal.banking.com
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  requests:
    cpu: "500m"
    memory: "1228Mi"
  limits:
    cpu: "2000m"
    memory: "2048Mi"

autoscaling:
  enabled: false
  minReplicas: 4
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

app:
  environment: prod
  springProfiles: "production,scoring"
  jvmOpts: "-Xmx1536m -XX:+UseG1GC -XX:+UseStringDeduplication"
  
  creditBureaus:
    experian:
      url: "https://api.experian.com/credit"
    equifax:
      url: "https://api.equifax.com/ews"
    transunion:
      url: "https://api.transunion.com/credit"
    timeout: "15000"
  
  models:
    fico:
      version: "9.0"
    vantage:
      version: "4.0"
    custom:
      path: "/models/proprietary-score-v2.3.pkl"
  
  risk:
    minCreditScore: "580"
    maxDtiRatio: "0.43"
    minIncomeVerification: "true"
  
  compliance:
    fcra: "true"
    ecoa: "true"
    adverseActionNotifications: "true"
  
  ml:
    featureCount: "247"
    modelRefreshInterval: "24h"
    abTestEnabled: "true"

healthProbes:
  liveness:
    httpGet:
      path: /actuator/health/liveness
      port: 8080
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 3
  
  readiness:
    httpGet:
      path: /actuator/health/readiness
      port: 8080
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 1
