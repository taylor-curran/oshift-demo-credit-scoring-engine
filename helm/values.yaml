replicaCount: 4

image:
  repository: registry.bank.internal/credit-scoring-engine
  tag: "3.1.0"
  digest: "sha256:a1b2c3d4e5f6789012345678901234567890123456789012345678901234567890"
  pullPolicy: IfNotPresent

fluentBit:
  enabled: true
  image:
    repository: registry.bank.internal/fluent-bit
    tag: "2.1.10"
    digest: "sha256:b1c2d3e4f5a6789012345678901234567890123456789012345678901234567890"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8080"
  prometheus.io/path: "/actuator/prometheus"

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1001
  runAsGroup: 1001
  fsGroup: 1001
  seccompProfile:
    type: RuntimeDefault

securityContext:
  runAsNonRoot: true
  runAsUser: 1001
  runAsGroup: 1001
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  seccompProfile:
    type: RuntimeDefault
  capabilities:
    drop:
    - ALL

service:
  type: ClusterIP
  port: 8080

resources:
  requests:
    cpu: "500m"
    memory: "1536Mi"
  limits:
    cpu: "2000m"
    memory: "3072Mi"

fluentBitResources:
  requests:
    cpu: "50m"
    memory: "64Mi"
  limits:
    cpu: "100m"
    memory: "128Mi"

livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: 8080
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

nodeSelector: {}

tolerations: []

affinity: {}

environment: prod
team: pe-eng
appName: credit-scoring-engine
partOf: retail-banking
managedBy: helm

env:
  SPRING_PROFILES_ACTIVE: "production,scoring"
  JBP_CONFIG_OPEN_JDK_JRE: '[jre: {version: 17.+}]'
  JVM_OPTS: "-Xmx2560m -XX:+UseG1GC -XX:+UseStringDeduplication"
  LOGGING_LEVEL_ROOT: "INFO"
  LOGGING_PATTERN_CONSOLE: '{"timestamp":"%d{yyyy-MM-dd HH:mm:ss.SSS}","level":"%level","logger":"%logger{36}","message":"%msg","thread":"%thread"}%n'

logging:
  format: json
  level: INFO
