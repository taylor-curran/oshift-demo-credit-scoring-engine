apiVersion: apps/v1
kind: Deployment
metadata:
  name: pe-eng-credit-scoring-engine-prod
  namespace: credit-scoring
  labels:
    app.kubernetes.io/name: credit-scoring-engine
    app.kubernetes.io/version: "3.1.0"
    app.kubernetes.io/part-of: retail-banking
    environment: prod
    managed-by: helm
spec:
  replicas: 4
  selector:
    matchLabels:
      app.kubernetes.io/name: credit-scoring-engine
      environment: prod
  template:
    metadata:
      labels:
        app.kubernetes.io/name: credit-scoring-engine
        app.kubernetes.io/version: "3.1.0"
        app.kubernetes.io/part-of: retail-banking
        environment: prod
        managed-by: helm
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      containers:
      - name: credit-scoring-engine
        image: registry.bank.internal/credit-scoring-engine:3.1.0@sha256:f4e3d2c1b0a9876543210fedcba9876543210fedcba9876543210fedcba98765
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        envFrom:
        - configMapRef:
            name: pe-eng-credit-scoring-engine-prod-config
        resources:
          requests:
            cpu: "500m"
            memory: "2Gi"
          limits:
            cpu: "2000m"
            memory: "3Gi"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          seccompProfile:
            type: RuntimeDefault
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /actuator/health/startup
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: logs-volume
          mountPath: /app/logs
      - name: fluent-bit
        image: registry.bank.internal/fluent-bit:2.1.0@sha256:8e9f1a2b3c4d5e6f7890abcdef1234567890abcdef1234567890abcdef123456
        resources:
          requests:
            cpu: "50m"
            memory: "64Mi"
          limits:
            cpu: "100m"
            memory: "128Mi"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          seccompProfile:
            type: RuntimeDefault
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        volumeMounts:
        - name: logs-volume
          mountPath: /app/logs
          readOnly: true
        - name: fluent-bit-config
          mountPath: /fluent-bit/etc
          readOnly: true
        env:
        - name: LOKI_URL
          value: "http://loki.observability.svc.cluster.local:3100"
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: logs-volume
        emptyDir: {}
      - name: fluent-bit-config
        configMap:
          name: fluent-bit-config
