apiVersion: apps/v1
kind: Deployment
metadata:
  name: pe-eng-credit-scoring-engine-prod
  namespace: credit-scoring
  labels:
    app.kubernetes.io/name: credit-scoring-engine
    app.kubernetes.io/version: "3.1.0"
    app.kubernetes.io/part-of: retail-banking
    environment: prod
    managed-by: helm
spec:
  replicas: 4
  selector:
    matchLabels:
      app.kubernetes.io/name: credit-scoring-engine
      environment: prod
  template:
    metadata:
      labels:
        app.kubernetes.io/name: credit-scoring-engine
        app.kubernetes.io/version: "3.1.0"
        app.kubernetes.io/part-of: retail-banking
        environment: prod
        managed-by: helm
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: credit-scoring-engine
        image: registry.bank.internal/credit-scoring-engine:3.1.0
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8081
          name: management
          protocol: TCP
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            cpu: "1200m"
            memory: "1843Mi"
          limits:
            cpu: "2000m"
            memory: "3072Mi"
        envFrom:
        - configMapRef:
            name: pe-eng-credit-scoring-engine-prod
        env:
        - name: SERVER_PORT
          value: "8080"
        - name: MANAGEMENT_SERVER_PORT
          value: "8081"
        - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
          value: "health,info,metrics,prometheus"
        - name: MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS
          value: "always"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: logs-volume
          mountPath: /app/logs
        - name: models-volume
          mountPath: /models
          readOnly: true
      - name: fluent-bit
        image: registry.bank.internal/fluent-bit:2.1.10
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            cpu: "50m"
            memory: "64Mi"
          limits:
            cpu: "100m"
            memory: "128Mi"
        volumeMounts:
        - name: logs-volume
          mountPath: /app/logs
          readOnly: true
        - name: fluent-bit-config
          mountPath: /fluent-bit/etc
          readOnly: true
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: logs-volume
        emptyDir: {}
      - name: models-volume
        configMap:
          name: ml-models-config
      - name: fluent-bit-config
        configMap:
          name: fluent-bit-config
